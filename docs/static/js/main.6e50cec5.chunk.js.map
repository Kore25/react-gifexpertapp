{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","saludo","subtitulo","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCKhBG,MAVf,YAAuC,EAAjBC,GAAkB,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,IAE7B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCiCLK,MA3Bf,YAA8B,IAAZZ,EAAW,EAAXA,SAEd,ECLwB,SAACA,GACzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPjB,EAASC,GACJiB,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAEGc,EDbyBK,CAAanB,GAAhCU,EAAb,EAAOJ,KAAcO,EAArB,EAAqBA,QAGrB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IACjDa,GAAW,mBAAGjB,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADAA,EAAIhB,aEUtB2B,EAzBM,SAAC,GAA0B,EAAxBC,OAAwB,EAAhBC,UAAiB,IAC7C,EAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWf,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCfjCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6e50cec5.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {        \n        setInputValue(e.target.value);\n    }\n\n    const handleSummit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);        \n            setInputValue('')\n        }\n    }\n    return (\n        <form onSubmit={handleSummit}>        \n            <input\n                type=\"text\" \n                value={inputValue}\n                onChange={ handleInputChange }\n                />\n        </ form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react'\n\nfunction GifGridItem({id, title, url}) {\n    // console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n\n","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=xPZHPxac4mfJB8MbvwM0dv9SGW2NBbTf&q=${encodeURI(category)}&limit=10`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n    return gifs;\n }","// import React, { useState, useEffect } from 'react'\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\n\n// import PropTypes from 'prop-types'\n\nfunction GifGrid({category}) {\n\n    const {data: images, loading} = useFetchGifs(category);\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }                                              \n            <div className=\"card-grid\">\n                { \n                    images.map(img =>                         \n                        <GifGridItem \n                            key={img.id}\n                            {... img}    \n                            />\n                    ) \n                }\n            </div>\n        </>\n    )\n}\n\n// GifGrid.propTypes = {\n\n// }\n\nexport default GifGrid\n\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category  )\n            .then(imgs =>                 \n                setState({ \n                    data: imgs,\n                    loading: false                \n                })                \n            );\n\n    }, [category] );    \n\n    return state;\n}","import { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = ( {saludo, subtitulo} ) => { \n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = (e) => {        \n    //     // setCategories( [...categories, 'Naruto'] );\n    //     setCategories( cats =>  [...categories, 'Naruto'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                { \n                    categories.map(category => \n                        <GifGrid \n                            key={category}\n                            category={category}/>\n                    ) \n                }\n            </ol>\n        </>\n    )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}